name: MegatecUpsController application github workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest

    env:
      project_file: MegatecUpsController.csproj
      project_name: MegatecUpsController

    steps:
    # Checkout project code
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    #- name: Install .NET Core
    #  uses: actions/setup-dotnet@v3
    #  with:
    #    dotnet-version: 6.0.x

    # Setup  and add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1.0.2

    # Setup VTest
    #- name: Setup VSTest.exe
    #  uses: Malcolmnixon/Setup-VSTest@v4

    # Setup NuGet packages manager
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1

    # Restore required packages
    - name: Restore NuGet Packages
      run: nuget restore -PackagesDirectory packages $env:project_file
      env: 
        project_file: ${{ env.project_file }}

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    #- name: Decode the pfx
    #  run: |
    #    $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
    #    $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
    #    [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Build the project
    - name: Build 
      run: msbuild $env:project_file /p:Configuration=$env:configuration
      env:
        project_file: ${{ env.project_file }}
        configuration: ${{ matrix.configuration }}

    # Remove the pfx
    # - name: Remove the pfx
    #   run: Remove-Item -path $env:Wap_Project_Directory\GitHubActionsWorkflow.pfx

    # Execute all unit tests in the solution
    # - name: Execute unit tests
    #   run: dotnet test

    # Run Vtest tests
    # - name:  Run Tests
    #   run: vstest.console ProjectTests\bin\Debug\MegatecUpsController.dll

    # Upload builded artefact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      env:
         project_name: ${{ env.project_name}}
         configuration: ${{ matrix.configuration }}
      with:
        name: $env:project_name
        path: |
          bin/${{ matrix.configuration }}/
        if-no-files-found: error
        retention-days: 90